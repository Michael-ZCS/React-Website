{"version":3,"sources":["components/Headlines.js","components/HeadlineArticle.js","components/Everything.js","components/EverythingArticle.js","components/Source.js","App.js","serviceWorker.js","index.js"],"names":["Headlines","props","state","articles","fetch","then","res","json","result","setState","id","className","this","map","article","index","src","urlToImage","alt","title","description","to","pathname","search","data","Component","HeadlineArticle","location","filter","e","class","author","source","name","publishedAt","content","url","Everything","EverythingArticle","Source","sources","onClick","window","open","href","category","language","country","App","style","textDecoration","color","from","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d0b00fb9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../styles/Articles.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Headlines extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        articles: []\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      fetch(\"https://newsapi.org/v2/top-headlines?country=us&apiKey=214a4db7076748d182b1e0b5066b0a9a\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              articles: result.articles\r\n            });\r\n          }\r\n          \r\n        )\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <div>\r\n            <div id=\"header\"><h2>Top Headlines</h2></div>\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n            <div className=\"row\">\r\n                {this.state.articles.map((article,index) => (\r\n                    <div className=\"col-md-4\">\r\n                    <div className=\"card text-center\">\r\n                        <div className=\"overflow\">\r\n                            <img src = {article.urlToImage} className=\"card-img-top\" alt=\"Not Available\"/>\r\n                        </div>\r\n                        <div className=\"card-body text-dark\">\r\n                            <h5 className=\"card-title\">{article.title}</h5>\r\n                            <p className=\"card-text text-secondary\">{article.description}</p>\r\n                            <Link to={{pathname: '/top-headline-article',search: '?query=abc',state: {data: article.title}}} className=\"btn btn-outline-success\">see more</Link>\r\n                        </div>    \r\n                    </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n    \r\n  \r\n  export default Headlines;","import React, { Component } from 'react';\r\nimport '../styles/ArticleDetail.css';\r\n\r\n\r\nclass HeadlineArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          articles: [],\r\n          title: this.props.location.state.data\r\n        }\r\n      }\r\n\r\n    componentDidMount(){\r\n    fetch(\"https://newsapi.org/v2/top-headlines?country=us&apiKey=214a4db7076748d182b1e0b5066b0a9a\")\r\n        .then(res => res.json())\r\n        .then(\r\n        (result) => {\r\n            this.setState({\r\n            articles: result.articles\r\n            });\r\n        }\r\n        )\r\n    }\r\n\r\nrender(){\r\n    const article = this.state.articles.filter((e) => e.title === this.state.title)\r\n    return(\r\n        <div>\r\n            {article.map((data,index) => (\r\n                <div>\r\n                    <div class=\"container\">\r\n                            <div>\r\n                                <h1 class=\"mt-4\">{data.title}</h1>\r\n                                <h5 class=\"sub-title\">by {data.author}</h5>\r\n                                <h5 class=\"sub-title\">Source {data.source.name}</h5>\r\n                                <h6>Published at {data.publishedAt}</h6>\r\n                                <hr></hr>\r\n                                <img class=\"img-fluid rounded\" src={data.urlToImage} alt=\"Not Available\"/>\r\n                                <hr></hr>\r\n                                <p class=\"lead\">{data.description}</p>\r\n\r\n                                <blockquote class=\"blockquote\">\r\n                                <p class=\"mb-0\">{data.content}</p>\r\n                                \r\n                                <footer class=\"blockquote-footer\">Original url: \r\n                                <cite title=\"Source Title\"> {data.url}</cite>\r\n                                </footer>\r\n                                </blockquote>\r\n                                <hr></hr>\r\n                            </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default HeadlineArticle;","import React, { Component } from 'react';\r\nimport '../styles/Articles.css';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass Everything extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        articles: []\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      fetch(\"https://newsapi.org/v2/everything?q=money&apiKey=214a4db7076748d182b1e0b5066b0a9a\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              articles: result.articles\r\n            });\r\n          }\r\n          \r\n        )\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <div>\r\n            <div id=\"header\"><h2>Everything</h2></div>\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n            <div className=\"row\">\r\n                {this.state.articles.map((article,index) => (\r\n                    <div className=\"col-md-4\">\r\n                    <div className=\"card text-center\">\r\n                        <div className=\"overflow\">\r\n                            <img src = {article.urlToImage} className=\"card-img-top\" alt=\"Not Available\"/>\r\n                        </div>\r\n                        <div className=\"card-body text-dark\">\r\n                            <h5 className=\"card-title\">{article.title}</h5>\r\n                            <p className=\"card-text text-secondary\">{article.description}</p>\r\n                            <Link to={{pathname: '/everything-article',search: '?query=abc',state: {data: article.title}}} className=\"btn btn-outline-success\">see more</Link>\r\n                        </div>    \r\n                    </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n    \r\n  \r\n  export default Everything;","import React, { Component } from 'react';\r\nimport '../styles/ArticleDetail.css';\r\n\r\n\r\nclass EverythingArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          articles: [],\r\n          title: this.props.location.state.data\r\n        }\r\n      }\r\n\r\n    componentDidMount(){\r\n    fetch(\"https://newsapi.org/v2/everything?q=money&apiKey=214a4db7076748d182b1e0b5066b0a9a\")\r\n        .then(res => res.json())\r\n        .then(\r\n        (result) => {\r\n            this.setState({\r\n            articles: result.articles\r\n            });\r\n        }\r\n        )\r\n    }\r\n\r\nrender(){\r\n    const article = this.state.articles.filter((e) => e.title === this.state.title)\r\n    return(\r\n        <div>\r\n            {article.map((data,index) => (\r\n                <div>\r\n                    <div class=\"container\">\r\n                            <div>\r\n                                <h1 class=\"mt-4\">{data.title}</h1>\r\n                                <h5 class=\"sub-title\">by {data.author}</h5>\r\n                                <h5 class=\"sub-title\">Source {data.source.name}</h5>\r\n                                <h6>Published at {data.publishedAt}</h6>\r\n                                <hr></hr>\r\n                                <img class=\"img-fluid rounded\" src={data.urlToImage} alt=\"Not Available\"/>\r\n                                <hr></hr>\r\n                                <p class=\"lead\">{data.description}</p>\r\n\r\n                                <blockquote class=\"blockquote\">\r\n                                <p class=\"mb-0\">{data.content}</p>\r\n                                \r\n                                <footer class=\"blockquote-footer\">Original url: \r\n                                <cite title=\"Source Title\"> {data.url}</cite>\r\n                                </footer>\r\n                                </blockquote>\r\n                                <hr></hr>\r\n                            </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default EverythingArticle;","import React, { Component } from 'react';\r\nimport '../styles/Articles.css';\r\n\r\nclass Source extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        articles: []\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      fetch(\"https://newsapi.org/v2/sources?language=en&country=us&apiKey=214a4db7076748d182b1e0b5066b0a9a\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              articles: result.sources\r\n            });\r\n          }\r\n          \r\n        )\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <div>\r\n            <div id=\"header\"><h2>Source</h2></div>\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n            <div className=\"row\">\r\n                {this.state.articles.map((article,index) => (\r\n                    <div className=\"col-md-4\" onClick={function(){window.open(article.url)}}>\r\n                    <div className=\"card text-center\">\r\n                        <div className=\"card-body text-dark\">\r\n                            <h5 className=\"card-title\">{article.name}</h5>\r\n                            <p className=\"card-text text-secondary\">{article.description}</p>\r\n                            <a href={article.url}>{article.url}</a>    \r\n                        </div>\r\n                        <div id=\"sub-desc\">\r\n                                <p className=\"card-text text-secondary\">Category: {article.category}</p>\r\n                                <p className=\"card-text text-secondary\">Language: {article.language}</p>\r\n                                <p className=\"card-text text-secondary\">Country: {article.country}</p>\r\n                        </div>  \r\n                    </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n    \r\n  \r\n  export default Source;","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport Headlines from './components/Headlines';\nimport HeadlineArticle from './components/HeadlineArticle';\nimport Everything from './components/Everything';\nimport EverythingArticle from './components/EverythingArticle';\nimport Sources from './components/Source';\n\n\n\nclass App extends Component {\n\n  render(){\n    return (\n      <Router>\n        <div id=\"navbar-container\">\n          <div id=\"title\">\n                <h2 >News Media</h2>\n          </div>\n          <div id=\"navbar\">\n            <p>\n              <Link to=\"/top-headlines\" class=\"link\"  style={{ textDecoration: 'none', color:'black' }}>Top Headlines</Link>\n              <Link to=\"/everything\" class=\"link\"  style={{ textDecoration: 'none', color:'black' }}>Everything</Link>\n              <Link to=\"/sources\" class=\"link\"  style={{ textDecoration: 'none', color:'black' }}>Sources</Link>\n            </p>\n          </div>\n        </div>\n\n        <Redirect from=\"/\" to=\"/top-headlines\" />\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/top-headlines\" />\n          </Route>\n          <Route path=\"/top-headlines\">\n            <Headlines />\n          </Route>\n          <Route exact path=\"/top-headline-article\" component={HeadlineArticle}/>\n          <Route path=\"/everything\">\n            <Everything />\n          </Route>\n          <Route exact path=\"/everything-article\" component={EverythingArticle}/>\n          <Route path=\"/sources\">\n            <Sources />\n          </Route>\n        </Switch> \n\n        <footer class=\"py-5 bg-dark\">\n        <div class=\"container\">\n          <p class=\"m-0 text-center text-white\">Copyright &copy; Michael Jihanda 2020</p>\n        </div>\n        \n      </footer>\n      </Router>\n    );\n  }\n}\n  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}